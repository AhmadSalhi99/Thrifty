@model Thrifty.Models.AccountInformation

@{
    ViewData["Title"] = "Account Information";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="~/lib/bootstrap/dist/css/bootstrap-grid.min.css" rel="stylesheet" />
<style>
    .alert {
        border: 0;
        border-radius: 0;
        color: #FFFFFF;
        padding: 10px 15px;
        font-size: 14px;
        position: absolute;
        top: 100px;
        right: 58px;
        font-size: 18px;
        font-family: inherit;
        border-radius: 5px;
        padding-inline: 35px;
    }


    .alert-success {
        color: #0f5132;
        background-color: #d1e7dd;
        border-color: #badbcc
    }

    .alert-danger {
        color: #842029;
        background-color: #f8d7da;
        border-color: #f5c2c7
    }


    .hiden {
        display: none;
    }

    /**/
    .form-group {
        margin-bottom: 1rem;
    }

    label {
        display: inline-block;
        margin-bottom: .5rem;
        color: var(--title-color);
    }

    .form-control {
        display: block;
        width: 100%;
        padding: .5rem .75rem;
        font-size: 1rem;
        line-height: 1.75;
        color: var(--title-color);
        background-color: var(--bg-color);
        background-image: none;
        background-clip: padding-box;
        border: 0.5px solid var(--title-color);
        border-radius: .25rem;
        transition: border-color ease-in-out .15s,box-shadow ease-in-out .15s;
    }

    text-danger {
        color: #dc3545 !important;
    }

    select.form-control:not([size]):not([multiple]) {
        height: calc(2.75rem + 2px);
    }

    .btn-save {
        padding-inline: 38px;
        font-size: 18px;
        padding-block: 5px;
        background-color: var(--bg-color-light);
        color: var(--title-color);
        border: none;
        border-radius: 5px;
    }

    .btn-back {
        margin-left: 20px;
        color: var(--title-color);
    }

    .container {
        /*height: 85vh;*/
        overflow: hidden;
    }

    .row {
        padding-top: 60px;
    }

    /*******************************************************************/

    <style >
    .item_type {
        color: var(--title-color);
        font-size: 20px;
        font-weight: 700;
    }

    .item_name {
        color: var(--title-color);
        font-size: 28px;
        font-weight: 700;
    }

    .item_size {
        color: var(--title-color);
        font-size: 18px;
    }

    .item_color {
        color: var(--title-color);
        font-size: 17px;
    }

    .item_price {
        color: var(--title-color);
        font-size: 20px;
    }

    .item_description {
        color: var(--title-color);
        font-size: 18px;
        padding-top: 30px;
    }


    .item-count, .item-total-price {
        color: var(--title-color);
        font-family: inherit;
        font-size: 18px;
    }


    .item-image {
        width: 150px;
        object-fit: cover;
    }

    .mi-20 {
        margin-inline-end: 20px;
    }

    .btn-remove {
        font-size: 17px;
        border: none;
        border-radius: 5px;
        color: #bb1616;
        background-color: transparent;
        cursor: pointer;
    }

    .grid-container {
        display: grid;
        grid-template-columns: 150px 400px 200px 100px;
        grid-gap: 60px;
        padding-top: 10px;
    }


    @@media screen and (max-width: 768px) {
        .grid-container {
            grid-template-columns: 1fr;
            grid-gap: 30px;
        }
    }

    @@media screen and (min-width: 769px) and (max-width: 1024px) {
        .grid-container {
            grid-template-columns: 150px 1fr;
            grid-gap: 30px;
        }
    }

    .no-data {
        height: 50vh;
        display: flex;
        align-items: center;
        justify-content: center;
    }

        .no-data > p {
            color: var(--title-color);
            font-family: inherit;
            font-size: 30px;
        }

    .btn-add-cart {
        display: flex;
        align-items: center;
        justify-content: center;
        flex-direction: row;
        padding-inline: 45px;
        background: var(--bg-color);
        color: var(--title-color);
        border: 1px solid var(--title-color);
        border-radius: 3px;
        padding-block: 6px;
    }

    .cart-add-svg {
        fill: var(--title-color);
    }
</style>
</style>



<div class="alert alert-success hiden" role="alert">
    Item Added To Cart Successfully
</div>

<div class="alert alert-danger hiden" role="alert">
    Item Already Added To Cart
</div>

<main class="main">
    <section class="home section" style="padding-bottom: 260px;">
        <div class="container">
            <div class="row d-flex justify-content-between f-wrap-reverse gap-30">
                <div class="col-md-5">
                    <img style="width: 405px;" src="~/img/account/profile.png" />
                </div>
                <div class="col-md-6">
                    <form asp-action="AccountInformation">
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                        <input type="hidden" asp-for="id" />
                        <div class="form-group">
                            <label asp-for="fullName" class="control-label"></label>
                            <input asp-for="fullName" class="form-control" />
                            <span asp-validation-for="fullName" class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <label asp-for="mobileNumber" class="control-label"></label>
                            <input asp-for="mobileNumber" class="form-control" />
                            <span asp-validation-for="mobileNumber" class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <label asp-for="email" class="control-label"></label>
                            <input asp-for="email" class="form-control" />
                            <span asp-validation-for="email" class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <label asp-for="cityId" class="control-label"></label>
                            <select asp-for="cityId" class="form-control" asp-items="ViewBag.Cities">
                                <option disabled selected>--- SELECT ---</option>
                            </select>
                            <span asp-validation-for="cityId" class="text-danger"></span>
                        </div>


                        <div class="d-flex align-items-center">
                            <div>
                                <input type="submit" value="Save" class="btn btn-save" />
                            </div>
                            <div class="ml-3">
                                <a asp-action="Index" asp-controller="Home" class="btn-back">Back</a>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">

                    @foreach (var order in Model.orders)
                    {
                        <div class="col-md-12">
                            <hr />
                            <div class="grid-container">
                                <div class="grid-item">
                                    <img src="data:image/png;base64,@order.Item!.mainImage!.imageBase" alt="new image" class="new__img item-image mi-20">
                                </div>
                                <div class="grid-item">
                                    <div class="d-flex flex-column align-items-start justify-content-start mi-20">
                                        <p class="item_name">@order.Item.name</p>
                                        <p class="item_type">@order.Item.ItemType!.name</p>
                                        <p class="item_size">Size : @order.Item.size</p>
                                        <p class="item_color">Color : @order.Item.color</p>
                                    </div>
                                </div>
                                <div class="grid-item">
                                    <div class="d-flex flex-column align-items-start justify-content-between mi-20">
                                        <h2>Price</h2>
                                        <p>@order.Item.price JOD</p>
                                    </div>
                                </div>
                                <div class="grid-item">
                                    <div class="d-flex flex-column align-items-start justify-content-between mi-20">
                                        <h2>Status</h2>
                                        <p>@order.OrderStatus.Name</p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </section>
</main>


@*@section scripts{
    <script>
        function addToCart(productId) {
            // Retrieve existing cart data from local storage (if any)
            var cartData = localStorage.getItem('cart');

            // Parse the JSON data or initialize an empty array if no data exists
            var cartItems = cartData ? JSON.parse(cartData) : [];

            // Check if the product already exists in the cart
            var exists = cartItems.some(item => item === productId);

            if (!exists) {
                // Add the new product to the cart
                cartItems.push(productId);
                // Store the updated cart data in local storage
                localStorage.setItem('cart', JSON.stringify(cartItems));
                document.querySelector(".alert-success").classList.remove("hiden")
                document.querySelector(".alert-danger").classList.add("hiden")

            } else {

                document.querySelector(".alert-success").classList.add("hiden")
                document.querySelector(".alert-danger").classList.remove("hiden")
                // Handle the case where the product is already in the cart
                console.log('Product already exists in the cart.');
            }
        }
    </script>
}*@